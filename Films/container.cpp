//------------------------------------------------------------------------------
// container.cpp - содержит функции обработки контейнера
//------------------------------------------------------------------------------

#include "container.h"

//------------------------------------------------------------------------------
// Инициализация контейнера
void Init(container& c) {
    c.length = 0;
}

//------------------------------------------------------------------------------
// Очистка контейнера от элементов (освобождение памяти)
void Clear(container& c) {
    for (int i = 0; i < c.length; i++) {
        delete c.cont[i];
    }
    c.length = 0;
}

//------------------------------------------------------------------------------
// Ввод содержимого контейнера из указанного потока
void In(container& c, ifstream& ifst) {
    while (!ifst.eof()) {
        if ((c.cont[c.length] = In(ifst)) != 0) {
            c.length++;
        }
    }
}

//------------------------------------------------------------------------------
// Случайный ввод содержимого контейнера
void InRnd(container& c, int size) {
    while (c.length < size) {
        if ((c.cont[c.length] = InRnd()) != nullptr) {
            c.length++;
        }
    }
}

//------------------------------------------------------------------------------
// Вывод содержимого контейнера в указанный поток
void Out(container& c, ofstream& ofst) {
    ofst << "The container has " << c.length << " elements." << endl;
    for (int i = 0; i < c.length; i++) {
        ofst << i << ": ";
        Out(*(c.cont[i]), ofst);
    }
}

//------------------------------------------------------------------------------
// Вычисление суммы периметров всех фигур в контейнере
double Average(container& c) {
    double average = 0.0;
    for (int i = 0; i < c.length; i++) {
        average += Quotient(*(c.cont[i]));
    }
    return average / c.length;
}
